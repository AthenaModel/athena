# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    order_inject.help
#
# AUTHOR:
#    Dave Hanks
#
# DESCRIPTION:
#    Athena Help Documentation: INJECT:* Orders
#
#    This file is included into order.help.
#
#-----------------------------------------------------------------------

page /order inject "CURSE Inject Orders" {
    <title>

    Through the user of <cref /order/curse CURSEs> Athena allows the 
    analyst to model any number of user defined events and situations 
    that drive attitude change. Once a CURSE is created, the analyst may 
    associate with it a variety of attitude injects; and the effects of
    these injects will be associated with the CURSE when viewing the 
    history.<p>

    The following orders are used to create and manipulate injects:<p>

    <childlinks>
}

order INJECT:DELETE "Delete Inject" {
    Deletes the <term inject>. The order parameters are as
    follows:<p>

    <parmlist>
    <inject_ parm id -required>
    </parmlist>
}

order INJECT:STATE "Set Inject State" {
    Sets the <term inject>'s state. Note that this order is for
    internal use by the application; there is no associated order
    dialog.  The order parameters are as follows:<p>

    <parmlist>
    <inject_ parms -required -tags state>
    </parmlist>
}

#---------------------------------------------------------------------
# inject: COOP

page /order/inject coop INJECT:COOP:* {
    <title>

    The following orders are used to create and update
    <cref /entity/inject/coop>s.<p>

    <childlinks>
}

order INJECT:COOP:CREATE "Create Inject: Cooperation" {
    Creates a <cref /entity/inject/coop>.<p>

    <parmlist>
    <inject_ parms -required -tags create>
    <inject_coop parms -required -tags create>
    </parmlist>
}

order INJECT:COOP:UPDATE "Update Inject: Cooperation" {
    Updates an existing <cref /entity/inject/coop>.<p>

    <parmlist>
    <inject_ parm id -required>
    <inject_ parms -optional -tags update>
    <inject_coop parms -optional -tags update>
    </parmlist>
}

#--------------------------------------------------------------------
# inject: HREL

page /order/inject hrel INJECT:HREL:* {
    <title>

    The following orders are used to create and update
    <cref /entity/inject/hrel>s.<p>

    <childlinks>
}

order INJECT:HREL:CREATE "Create Inject: Horizontal Relationship" {
    Creates a <cref /entity/inject/hrel>.<p>

    <parmlist>
    <inject_ parms -required -tags create>
    <inject_hrel parms -required -tags create>
    </parmlist>
}

order INJECT:HREL:UPDATE "Update Inject: Horizontal Relationship" {
    Updates an existing <cref /entity/inject/hrel>.<p>

    <parmlist>
    <inject_ parm id -required>
    <inject_ parms -optional -tags update>
    <inject_hrel parms -optional -tags update>
    </parmlist>
}

#--------------------------------------------------------------------
# inject: SAT

page /order/inject sat INJECT:SAT:* {
    <title>

    The following orders are used to create and update
    <cref /entity/inject/sat>s.<p>

    <childlinks>
}

order INJECT:SAT:CREATE "Create Inject: Satisfaction" {
    Creates a <cref /entity/inject/sat>.<p>

    <parmlist>
    <inject_ parms -required -tags create>
    <inject_sat parms -required -tags create>
    </parmlist>
}

order INJECT:SAT:UPDATE "Update Inject: Satisfaction" {
    Updates an existing <cref /entity/inject/sat>.<p>

    <parmlist>
    <inject_ parm id -required>
    <inject_ parms -optional -tags update>
    <inject_sat parms -optional -tags update>
    </parmlist>
}

#--------------------------------------------------------------------
# inject: VREL 

page /order/inject vrel INJECT:VREL:* {
    <title>

    The following orders are used to create and update
    <cref /entity/inject/vrel>s.<p>

    <childlinks>
}

order INJECT:VREL:CREATE "Create Inject: Vertical Relationship" {
    Creates a <cref /entity/inject/vrel>.<p>

    <parmlist>
    <inject_ parms -required -tags create>
    <inject_vrel parms -required -tags create>
    </parmlist>
}

order INJECT:VREL:UPDATE "Update Inject: Vertical Relationship" {
    Updates an existing <cref /entity/inject/vrel>.<p>

    <parmlist>
    <inject_ parm id -required>
    <inject_ parms -optional -tags update>
    <inject_vrel parms -optional -tags update>
    </parmlist>
}

