# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#   040-driver_iom.test
#
# AUTHOR:
#   Will Duquette
#
# DESCRIPTION:
#   IOM tests.
#
#   This test suite tests that the rules fire when appropriate.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Define an htools buffer for tests
    htools ht

    # pprint text
    #
    # text  - block text
    #
    # Prints it so that it looks nice in a -result option.

    proc pprint {text} {
        return "\n[string trim $text]\n    "
    }

    # setup 
    #
    # Sets up for tests.
    
    proc setup {} {
        # FIRST, other rule sets shouldn't muddy the waters.
        parm set dam.PRESENCE.active no
        parm set dam.ENI.active no
        parm set dam.CONSUMP.active no
        parm set dam.UNEMP.active no
        rdb eval {DELETE FROM drivers}
        rdb eval {DELETE FROM mads}
        
        # NEXT, create the entities
        ted create JOE BOB NB1 SHIA SUNN BLUE IOM1 HOOK1 CBS PBS


        # NEXT, define belief systems
        set sid(JOE)  [ted order BSYS:SYSTEM:ADD]
        set sid(BOB)  [ted order BSYS:SYSTEM:ADD]
        set sid(SHIA) [ted order BSYS:SYSTEM:ADD]
        set sid(SUNN) [ted order BSYS:SYSTEM:ADD]

        set tid(T1) [ted order BSYS:TOPIC:ADD]
        ted order BSYS:TOPIC:UPDATE \
            tid $tid(T1) name "Topic 1" affinity no

        ted order BSYS:BELIEF:UPDATE \
            bid [list $sid(JOE) $tid(T1)] position 0.6 emphasis 0.5
        ted order BSYS:BELIEF:UPDATE \
            bid [list $sid(BOB) $tid(T1)] position -0.6 emphasis 0.5
        ted order BSYS:BELIEF:UPDATE \
            bid [list $sid(SHIA) $tid(T1)] position 0.6 emphasis 0.35
        ted order BSYS:BELIEF:UPDATE \
            bid [list $sid(SUNN) $tid(T1)] position -0.6 emphasis 0.35

        # NEXT, associate HOOK1 with $tid(T1)
        ted order HOOK:TOPIC:CREATE hook_id HOOK1 \
            topic_id $tid(T1) position 0.6

        # NEXT, add payloads to IOM1
        ted order PAYLOAD:COOP:CREATE iom_id IOM1 g BLUE mag S+
        ted order PAYLOAD:HREL:CREATE iom_id IOM1 g BLUE mag M+
        ted order PAYLOAD:SAT:CREATE  iom_id IOM1 c AUT  mag L+
        ted order PAYLOAD:VREL:CREATE iom_id IOM1 a JOE  mag XL+

        # NEXT, make the CAPs free to use.
        ted order CAP:UPDATE k CBS cost 0
        ted order CAP:UPDATE k PBS cost 0
    }
    
    # broadcast iom cap a
    #
    # owner    - The actor sending the IOM
    # iom      - The ID of the IOM to broadcast
    # cap      - The CAP by which to broadcast it
    # a        - The attributed source: SELF, NONE, or an actor.
    #
    # Creates the BROADCAST tactic, and locks the scenario.

    proc broadcast {owner iom cap a} {
        ted order TACTIC:BROADCAST:CREATE \
            owner       $owner \
            cap         $cap   \
            a           $a     \
            iom         $iom   \
            x1          0      \
            on_lock     YES    \
            once        NO

        ted lock
    }
    
    # Clean up after a test
    proc cleanup {} {
        ht clear
        ted cleanup
    }

    
    #-------------------------------------------------------------------
    # assess
    
    test assess-1.1 {Rule 1-1 fires} -constraints tbd -setup {
        setup
    } -body {
        broadcast JOE IOM1 CBS BOB

        ted querylist {
            SELECT * FROM rule_firings
        }
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          0
driver_id  1000
ruleset    IOM
rule       IOM-1-1
fdict      accept 0.390625 capcov 0.8 cap CBS regard 0.390625 iom IOM1 tsource JOE resonance 1.0 f SHIA dtype IOM asource BOB adjcov 1.2121212121212122
    }
    
    test assess-1.2 {Rule 1-1 inputs} -constraints tbd -setup {
        setup
    } -body {
        broadcast JOE IOM1 CBS BOB

        ted query {
            SELECT rule, atype, f, g, c, a
            FROM rule_firings JOIN rule_inputs USING (firing_id)
        }
    } -cleanup {
        cleanup
    } -result {
rule    atype f    g    c   a   
------- ----- ---- ---- --- --- 
IOM-1-1 coop  SHIA BLUE         
IOM-1-1 hrel  SHIA BLUE         
IOM-1-1 sat        SHIA AUT     
IOM-1-1 vrel       SHIA     JOE 
    }

    #-------------------------------------------------------------------
    # sigline

    test sigline-1.1 {sigline output} -setup {
        setup
    } -body {
        driver::IOM sigline "JOE IOM1" 
    } -cleanup {
        cleanup
    } -result {Broadcast of IOM1 by JOE}
         

    #-------------------------------------------------------------------
    # narrative

    test narrative-1.1 {narrative output} -setup {
        setup
    } -body {
        driver::IOM narrative {
            dtype      IOM
            tsource    JOE
            cap        CBS
            iom        IOM1
            f          SHIA
        } 
    } -cleanup {
        cleanup
    } -result {{actor:JOE} broadcasts {iom:IOM1} to {group:SHIA} via {cap:CBS}}

         
    #-------------------------------------------------------------------
    # detail

    test detail-1.1 {detail, IOM-1} -setup {
        setup
    } -body {
        # Note: the numeric parameters are in the correct range,
        # but no attempt has been made to make them sensible.
        driver::IOM detail {
            dtype      IOM
            tsource    JOE
            cap        CBS
            asource    BOB
            iom        IOM1
            f          SHIA
            capcov     0.8
            adjcov     1.2
            resonance  0.4
            regard     0.8
            accept     0.6
        } [namespace current]::ht

        pprint [ht get] 
    } -cleanup {
        cleanup
    } -result {
Actor <a href="my://app/actor/JOE">JOE</a>
broadcast <a href="my://app/iom/IOM1">IOM1</a>
via <a href="my://app/cap/CBS">CBS</a>
as <a href="my://app/actor/BOB">BOB</a>,
ultimately reaching group <a href="my://app/group/SHIA">SHIA</a>
with a coverage of 
80%.<p>

The message had a resonance of 0.40,
and SHIA's regard for the attributed sender
was 0.80.  The acceptability of the
message was therefore 0.60.<p>
    }
    

    
    cleanupTests
}

namespace delete ::athena_test::tests::









