# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-payload.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    payload(sim) tests.
#
#    This test suite tests the payload(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Set up for tests

    proc setup {} {
        ted create BLUE BRIT IOM1 IOM2

        # Verify that unused columns contain NULL
        adb rdb nullvalue "@"
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        adb rdb nullvalue ""
        array unset parms
        ted cleanup
    }

    # Standard payloads
    
    set P1 {
        iom_id       IOM1
        payload_type COOP 
        g            BLUE
        mag          1.0
    }

    # Ideally, this should have a different type.
    set P2 {
        iom_id       IOM2
        payload_type COOP 
        g            BRIT
        mag          2.0
    }

    set P3 {
        iom_id       IOM1
        payload_type SAT 
        c            AUT
        mag          1.0
    }

    set P4 {
        iom_id       IOM1
        payload_type VREL 
        a            JOE
        mag          1.0
    }

    #-------------------------------------------------------------------
    # create

    test create-1.1 {payload is created} -setup {
        setup
    } -body {
        tdb payload create $P1
        ted querylist {SELECT * FROM payloads}
    } -cleanup {
        cleanup
    } -result {
iom_id        IOM1
payload_num   1
payload_type  COOP
narrative     Change cooperation with BLUE by 1.0 points (XXXS+).
state         normal
a             @
c             @
g             BLUE
mag           1.0
    }

    test create-2.1 {undo deletes the payload} -setup {
        setup
        set undo [tdb payload create $P1]
    } -body {
        namespace eval :: $undo
        adb eval {SELECT * FROM payloads}
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # delete

    test delete-1.1 {payload is deleted} -setup {
        setup
        tdb payload create $P1
        tdb payload create $P2
    } -body {
        tdb payload delete {IOM1 1}

        adb eval {SELECT iom_id,payload_num FROM payloads}
    } -cleanup {
        cleanup
    } -result {IOM2 1}

    test delete-2.1 {Undo restores payload} -setup {
        setup
        tdb payload create $P1
        tdb payload create $P2
        set undo [tdb payload delete {IOM1 1}]
    } -body {
        namespace eval :: $undo
        ted querylist {SELECT * FROM payloads ORDER BY iom_id, payload_num}
    } -cleanup {
        cleanup
    } -result {
iom_id        IOM1
payload_num   1
payload_type  COOP
narrative     Change cooperation with BLUE by 1.0 points (XXXS+).
state         normal
a             @
c             @
g             BLUE
mag           1.0

iom_id        IOM2
payload_num   1
payload_type  COOP
narrative     Change cooperation with BRIT by 2.0 points (XS+).
state         normal
a             @
c             @
g             BRIT
mag           2.0
    }

    #-------------------------------------------------------------------
    # update

    test update-1.1 {payload is updated} -setup {
        setup
        tdb payload create $P2
    } -body {
        tdb payload update {
            id     {IOM2 1}
            g      BLUE
            mag    3.0
        }

        # This verifies both that requested changes are made, and
        # that NULL columns remain NULL.
        ted querylist {SELECT * FROM payloads}
    } -cleanup {
        cleanup
    } -result {
iom_id        IOM2
payload_num   1
payload_type  COOP
narrative     Change cooperation with BLUE by 3.0 points (S+).
state         normal
a             @
c             @
g             BLUE
mag           3.0
    }

    test update-1.2 {empty values are OK} -setup {
        setup
        tdb payload create $P2
    } -body {
        set a [ted query {SELECT * FROM payloads}]

        tdb payload update {
            id   {IOM2 1}
        }

        set b [ted query {SELECT * FROM payloads}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.1 {undo undoes the change} -setup {
        setup
        tdb payload create $P2
    } -body {

        set a [ted query {SELECT * FROM payloads}]

        set undo [tdb payload update {
            id     {IOM2 1}
            g      BLUE
            mag    3.0
        }]

        namespace eval :: $undo

        set b [ted query {SELECT * FROM payloads}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # state

    test state-1.1 {payload state is changed} -setup {
        setup
        tdb payload create $P2
    } -body {
        tdb payload state {IOM2 1} disabled

        ted querylist {SELECT * FROM payloads}
    } -cleanup {
        cleanup
    } -result {
iom_id        IOM2
payload_num   1
payload_type  COOP
narrative     Change cooperation with BRIT by 2.0 points (XS+).
state         disabled
a             @
c             @
g             BRIT
mag           2.0
    }


    test state-2.1 {undo undoes the change} -setup {
        setup
        tdb payload create $P2
    } -body {

        set a [ted query {SELECT * FROM payloads}]

        set undo [tdb payload state {IOM2 1} disabled]

        namespace eval :: $undo

        set b [ted query {SELECT * FROM payloads}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {Invalid ID: no such IOM} -setup {
        setup
    } -body {
        tdb payload validate {NONESUCH 1}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid IOM, should be one of: IOM1, IOM2}

    test validate-1.2 {Invalid ID: no payloads defined} -setup {
        setup
    } -body {
        tdb payload validate {IOM1 1}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid payload "IOM1 1", no payloads are defined for this IOM}

    test validate-1.3 {Invalid ID: no such payload} -setup {
        setup
        tdb payload create $P1
        tdb payload create $P2
    } -body {
        tdb payload validate {IOM1 2}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid payload "IOM1 2", payload number should be one of: 1}

    test validate-2.1 {Valid name} -setup {
        setup
        tdb payload create $P1
    } -body {
        tdb payload validate {IOM1 1}
    } -cleanup {
        cleanup
    } -result {IOM1 1}

    #-------------------------------------------------------------------
    # exists

    test exists-1.1 {no such payload} -setup {
        setup
        tdb payload create $P1
        tdb payload create $P2
    } -body {
        tdb payload exists {IOM1 2}
    } -cleanup {
        cleanup
    } -result {0}

    test exists-2.1 {Valid payload} -setup {
        setup
        tdb payload create $P1
    } -body {
        tdb payload exists {IOM1 1}
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # get

    proc setup_get {} {
        variable P2
        setup
        tdb payload create $P2
    }

    test get-1.1 {get payload dict} -setup {
        setup_get
    } -body {
        ted pdict [tdb payload get {IOM2 1}]
    } -cleanup {
        cleanup
    } -result {
        narrative    {Change cooperation with BRIT by 2.0 points (XS+).}
        mag          2.0
        a            @
        state        normal
        payload_num  1
        iom_id       IOM2
        g            BRIT
        c            @
        payload_type COOP
    }

    test get-1.2 {get parameter} -setup {
        setup_get
    } -body {
        tdb payload get {IOM2 1} g
    } -cleanup {
        cleanup
    } -result {BRIT}

    #-------------------------------------------------------------------
    # coop narrative

    test narrative-1.1 {coop narrative} -setup {
        setup
        tdb payload create $P1
    } -body {
        tdb payload coop narrative [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Change cooperation with BLUE by 1.0 points (XXXS+).}

    #-------------------------------------------------------------------
    # hrel narrative

    test narrative-1.2 {hrel narrative} -setup {
        setup
        tdb payload create $P1
    } -body {
        tdb payload hrel narrative [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Change horizontal relationships with BLUE by 1.0 points (XXXS+).}

    #-------------------------------------------------------------------
    # sat narrative

    test narrative-1.3 {sat narrative} -setup {
        setup
        tdb payload create $P3
    } -body {
        tdb payload sat narrative [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Change satisfaction with AUT by 1.0 points (XXXS+).}

    #-------------------------------------------------------------------
    # vrel narrative

    test narrative-1.4 {vrel narrative} -setup {
        setup
        tdb payload create $P4
    } -body {
        tdb payload vrel narrative [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Change vertical relationships with JOE by 1.0 points (XXXS+).}

    #-------------------------------------------------------------------
    # coop check

    test check-1.1 {coop check: g no longer exists} -setup {
        setup
        tdb payload create $P1
        adb eval {DELETE FROM frcgroups}
    } -body {
        tdb payload coop check [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Force group BLUE no longer exists.}

    #-------------------------------------------------------------------
    # hrel check

    test check-1.2 {hrel check: g no longer exists} -setup {
        setup
        tdb payload create $P1
        adb eval {DELETE FROM groups}
    } -body {
        tdb payload hrel check [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Group BLUE no longer exists.}

    #-------------------------------------------------------------------
    # sat check

    test check-1.3 {sat check: no problems} -setup {
        setup
        tdb payload create $P1
    } -body {
        tdb payload sat check [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # vrel check

    test check-1.4 {vrel check: a no longer exists} -setup {
        setup
        tdb payload create $P4
        adb eval {DELETE FROM actors}
    } -body {
        tdb payload vrel check [tdb payload get {IOM1 1}]
    } -cleanup {
        cleanup
    } -result {Actor JOE no longer exists.}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







