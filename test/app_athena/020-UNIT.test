# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-UNIT.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    app_sim(1) UNIT:* order tests.
#
#    This test suite tests the unit-related orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard units
    set u1 {
        cid       991
        n         NB1 
        g         BLUE  
        tn        NB1    
        a         PATROL    
        personnel 1
    }

    proc setup {} {
        ted create NB1 NB2 BLUE SHIA KURD
        ted deploy NB1 BLUE 100
        ted lock
    }

    proc cleanup {} {
        # Clean up the test environment
        ted cleanup
    }



    #-------------------------------------------------------------------
    # UNIT:MOVE

    test MOVE-1.1 {required parms} -body {
        ted order -reject UNIT:MOVE {}
    } -result {
        u {required value}
        location {required value}
    }
    
    test MOVE-1.2 {invalid unit} -body {
        set loc [latlong tomgrs {1 1}]
        ted order -reject UNIT:MOVE u U1 location $loc
    } -cleanup {
        cleanup
    } -result {
        u {Invalid unit name: "U1"}
    }


    test MOVE-1.3 {invalid location} -setup {
        setup
    } -body {
        ted order -reject UNIT:MOVE u BLUE/NB1 location NONESUCH
    } -cleanup {
        cleanup
    } -result {
        location {Invalid MGRS string: "NONESUCH"}
    }


    test MOVE-1.4 {location not in neighborhood} -setup {
        setup
    } -body {
        set loc [latlong tomgrs {4 4}]
        ted order -reject UNIT:MOVE u BLUE/NB1 location $loc 
    } -cleanup {
        cleanup
    } -result {
        location {Cannot remove unit from its neighborhood}
    }


    test MOVE-2.1 {unit is moved} -setup {
        setup
    } -body {
        set loc [latlong tomgrs {1.1 1.1}]
        ted order UNIT:MOVE u BLUE/NB1 location $loc

        set newloc [latlong tomgrs \
            [rdb onecolumn {SELECT location FROM units WHERE u='BLUE/NB1'}]]
        expr {$loc == $newloc}
    } -cleanup {
        cleanup
    } -result {1}


    test MOVE-2.2 {table monitor event} -setup {
        setup
    } -body {
        ted notifier bind ::adb <units>
        set loc [latlong tomgrs {1.1 1.1}]
        ted order UNIT:MOVE u BLUE/NB1 location $loc
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::adb <units> update BLUE/NB1}
    }


    test MOVE-3.1 {undo undoes the change} -setup {
        setup
        set loc [latlong tomgrs {1.1 1.1}]        
        ted order UNIT:MOVE u BLUE/NB1 location $loc
    } -body {
        ted notifier bind ::adb <units>
        adb order undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::adb <units> update BLUE/NB1}
    }



    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::






