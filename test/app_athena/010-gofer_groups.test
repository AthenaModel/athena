# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-gofer_groups.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    group(sim) tests.
#
#    This test suite tests the gofer::GROUPS type.
#
#    NOTE: The type itself is implemented using gofer(n); thus,
#    we don't need to test the behavior of the type itself.  As a result,
#    this test suite focusses on the gofer::GROUPS-specific rule
#    objects.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.
namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    proc setup {} {
        ted create JOE BOB BLUE BRIT TAL SUNN SHIA KURD
    }

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }


    #-------------------------------------------------------------------
    # Rule: BY_VALUE

    test BY_VALUE-1.1 {construct, valid} -setup {
        setup
    } -body {
        ::gofer::GROUPS::BY_VALUE construct {BLUE BRIT}
    } -cleanup {
        cleanup
    } -result {raw_value {BLUE BRIT}}

    test BY_VALUE-2.1 {validate, valid} -setup {
        setup
    } -body {
        ::gofer::GROUPS::BY_VALUE validate {raw_value {BLUE BRIT}}
    } -cleanup {
        cleanup
    } -result {raw_value {BLUE BRIT}}

    test BY_VALUE-2.2 {validate, invalid} -setup {
        setup
    } -body {
        ::gofer::GROUPS::BY_VALUE validate {raw_value {BLUE NONESUCH}}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -match glob -result {Invalid group*}

    test BY_VALUE-3.1 {narrative} -body {
        ::gofer::GROUPS::BY_VALUE narrative {raw_value BLUE}
    } -result {group BLUE}

    test BY_VALUE-4.1 {eval} -setup {
        setup
    } -body {
        ::gofer::GROUPS::BY_VALUE eval {raw_value {BLUE BRIT}}
    } -cleanup {
        cleanup
    } -result {BLUE BRIT}

    #-------------------------------------------------------------------
    # Rule: SUPPORTING_ACTOR

    test SUPPORTING_ACTOR-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::SUPPORTING_ACTOR construct any {JOE BOB}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test SUPPORTING_ACTOR-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::SUPPORTING_ACTOR validate {anyall any alist {JOE BOB}}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test SUPPORTING_ACTOR-3.1 {narrative} -body {
        ::gofer::GROUPS::SUPPORTING_ACTOR narrative {anyall ANY alist JOE}
    } -match glob -result {groups that actively support *}

    test SUPPORTING_ACTOR-4.1 {eval} -setup {
        setup
        foreach {g a support} {
            BRIT BOB 0.3
            BRIT JOE 0.3
            BLUE BOB 0.0
            SHIA BOB 0.3
        } {
            rdb eval {
                INSERT INTO support_nga(n,g,a,support)
                VALUES('NB1',$g,$a,$support)
            }
        }
    } -body {
        ::gofer::GROUPS::SUPPORTING_ACTOR eval {anyall ANY alist BOB}
    } -cleanup {
        cleanup
    } -result {BRIT SHIA}

    #-------------------------------------------------------------------
    # Rule: LIKING_ACTOR

    test LIKING_ACTOR-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKING_ACTOR construct any {JOE BOB}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test LIKING_ACTOR-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKING_ACTOR validate {anyall any alist {JOE BOB}}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test LIKING_ACTOR-3.1 {narrative} -body {
        ::gofer::GROUPS::LIKING_ACTOR narrative {anyall ANY alist JOE}
    } -match glob -result {groups that like *}

    test LIKING_ACTOR-4.1 {eval} -setup {
        setup
        ted lock
        aram vrel bset 1 BRIT BOB  0.3
        aram vrel bset 1 BRIT JOE  0.3
        aram vrel bset 1 BLUE BOB  0.0
        aram vrel bset 1 SHIA BOB  0.3
        aram vrel bset 1 TAL  BOB  0.0
        ted step
    } -body {
        ::gofer::GROUPS::LIKING_ACTOR eval {anyall ANY alist BOB}
    } -cleanup {
        cleanup
    } -result {BRIT SHIA}

    #-------------------------------------------------------------------
    # Rule: DISLIKING_ACTOR

    test DISLIKING_ACTOR-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKING_ACTOR construct any {JOE BOB}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test DISLIKING_ACTOR-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKING_ACTOR validate {anyall any alist {JOE BOB}}
    } -cleanup {
        cleanup
    } -result {anyall ANY alist {JOE BOB}}

    test DISLIKING_ACTOR-3.1 {narrative} -body {
        ::gofer::GROUPS::DISLIKING_ACTOR narrative {anyall ANY alist JOE}
    } -match glob -result {groups that dislike *}

    test DISLIKING_ACTOR-4.1 {eval} -setup {
        setup
        ted lock
        aram vrel bset 1 BRIT BOB -0.3
        aram vrel bset 1 BRIT JOE -0.3
        aram vrel bset 1 BLUE BOB  0.0
        aram vrel bset 1 SHIA BOB -0.3
        ted step
    } -body {
        ::gofer::GROUPS::DISLIKING_ACTOR eval {anyall ANY alist BOB}
    } -cleanup {
        cleanup
    } -result {BRIT SHIA}

    #-------------------------------------------------------------------
    # Rule: LIKING_GROUP

    test LIKING_GROUP-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKING_GROUP construct any {SHIA SUNN}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {SHIA SUNN}}

    test LIKING_GROUP-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKING_GROUP validate {anyall any glist {SHIA SUNN}}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {SHIA SUNN}}

    test LIKING_GROUP-3.1 {narrative} -body {
        ::gofer::GROUPS::LIKING_GROUP narrative {anyall ANY glist SHIA}
    } -match glob -result {groups that like *}

    test LIKING_GROUP-4.1 {eval} -setup {
        setup
        ted lock
        aram hrel bset 1 BRIT SHIA  0.3
        aram hrel bset 1 BRIT SUNN  0.3
        aram hrel bset 1 BLUE SHIA  0.0
        aram hrel bset 1 SUNN SHIA  0.3
        ted step
    } -body {
        ::gofer::GROUPS::LIKING_GROUP eval {anyall ANY glist SHIA}
    } -cleanup {
        cleanup
    } -result {BRIT SHIA SUNN}

    #-------------------------------------------------------------------
    # Rule: DISLIKING_GROUP

    test DISLIKING_GROUP-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKING_GROUP construct any {SHIA SUNN}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {SHIA SUNN}}

    test DISLIKING_GROUP-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKING_GROUP validate {anyall any glist {SHIA SUNN}}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {SHIA SUNN}}

    test DISLIKING_GROUP-3.1 {narrative} -body {
        ::gofer::GROUPS::DISLIKING_GROUP narrative {anyall ANY glist SHIA}
    } -match glob -result {groups that dislike *}

    test DISLIKING_GROUP-4.1 {eval} -setup {
        setup
        ted lock
        aram hrel bset 1 BRIT SHIA -0.3
        aram hrel bset 1 BRIT SUNN -0.3
        aram hrel bset 1 BLUE SHIA  0.0
        aram hrel bset 1 SUNN SHIA -0.3
        ted step
    } -body {
        ::gofer::GROUPS::DISLIKING_GROUP eval {anyall ANY glist SHIA}
    } -cleanup {
        cleanup
    } -result {BRIT SUNN}

    #-------------------------------------------------------------------
    # Rule: LIKED_BY_GROUP

    test LIKED_BY_GROUP-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKED_BY_GROUP construct any {BRIT BLUE}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {BRIT BLUE}}

    test LIKED_BY_GROUP-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::LIKED_BY_GROUP validate {anyall any glist {BRIT BLUE}}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {BRIT BLUE}}

    test LIKED_BY_GROUP-3.1 {narrative} -body {
        ::gofer::GROUPS::LIKED_BY_GROUP narrative {anyall ANY glist BRIT}
    } -match glob -result {groups that are liked by *}

    test LIKED_BY_GROUP-4.1 {eval} -setup {
        setup
        ted lock
        aram hrel bset 1 SHIA BLUE  0.3
        aram hrel bset 1 SHIA BRIT  0.0
        aram hrel bset 1 KURD BLUE  0.3
        aram hrel bset 1 SHIA SUNN  0.3
        ted step
    } -body {
        ::gofer::GROUPS::LIKED_BY_GROUP eval {anyall ANY glist SHIA}
    } -cleanup {
        cleanup
    } -result {BLUE SHIA SUNN}

    #-------------------------------------------------------------------
    # Rule: DISLIKED_BY_GROUP

    test DISLIKED_BY_GROUP-1.1 {construct} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKED_BY_GROUP construct any {BRIT BLUE}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {BRIT BLUE}}

    test DISLIKED_BY_GROUP-2.1 {validate} -setup {
        setup
    } -body {
        ::gofer::GROUPS::DISLIKED_BY_GROUP validate {anyall any glist {BRIT BLUE}}
    } -cleanup {
        cleanup
    } -result {anyall ANY glist {BRIT BLUE}}

    test DISLIKED_BY_GROUP-3.1 {narrative} -body {
        ::gofer::GROUPS::DISLIKED_BY_GROUP narrative {anyall ANY glist BRIT}
    } -match glob -result {groups that are disliked by *}

    test DISLIKED_BY_GROUP-4.1 {eval, one} -setup {
        setup
        ted lock
        aram hrel bset 1 SHIA BLUE -0.3
        aram hrel bset 1 SHIA BRIT  0.0
        aram hrel bset 1 KURD BLUE -0.3
        aram hrel bset 1 SHIA SUNN -0.3
        ted step
    } -body {
        ::gofer::GROUPS::DISLIKED_BY_GROUP eval {anyall ANY glist SHIA}
    } -cleanup {
        cleanup
    } -result {BLUE SUNN}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::

