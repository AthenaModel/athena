# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-group.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    group(sim) tests.
#
#    This test suite tests the group(sim) queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # names

    test names-1.1 {Returns names: none defined} -body {
        group names
    } -cleanup {
        cleanup
    } -result {}

    test names-1.2 {Returns names} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group names
    } -cleanup {
        cleanup
    } -result {BLUE SHIA USAID}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {Invalid name: none defined} -body {
        group validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid group, none are defined}

    test validate-1.2 {Invalid name: some defined} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid group, should be one of: BLUE, SHIA, USAID}

    test validate-2.1 {Valid name} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group validate BLUE
    } -cleanup {
        cleanup
    } -result {BLUE}

    #-------------------------------------------------------------------
    # gtype

    test gtype-1.1 {Invalid group} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group gtype NONESUCH
    } -cleanup {
        cleanup
    } -result {}

    test gtype-1.2 {Valid groups} -setup {
        ted create BLUE SHIA USAID
    } -body {
        list \
            [group gtype SHIA]  \
            [group gtype BLUE]  \
            [group gtype USAID]
    } -cleanup {
        cleanup
    } -result {CIV FRC ORG}

    #-------------------------------------------------------------------
    # isLocal

    test isLocal-1.1 {Invalid group} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group isLocal NONESUCH
    } -cleanup {
        cleanup
    } -result {0}

    test isLocal-1.2 {Valid groups} -setup {
        ted create BLUE SHIA USAID
    } -body {
        list \
            [group isLocal SHIA]  \
            [group isLocal BLUE]  \
            [group isLocal USAID]
    } -cleanup {
        cleanup
    } -result {1 0 0}

    #-------------------------------------------------------------------
    # ownedby

    test ownedby-1.1 {Invalid group} -setup {
        ted create BLUE SHIA USAID
    } -body {
        group ownedby NONESUCH
    } -cleanup {
        cleanup
    } -result {}

    test ownedby-1.2 {Valid groups} -setup {
        ted create JOE BLUE SHIA USAID ALQ
    } -body {
        group ownedby JOE
    } -cleanup {
        cleanup
    } -result {BLUE USAID}

    #-------------------------------------------------------------------
    # otherthan

    test otherthan-1.1 {no group} -setup {
        ted create BLUE BRIT SHIA USAID
    } -body {
        group otherthan {}
    } -cleanup {
        cleanup
    } -result {BLUE BRIT SHIA USAID}

    test otherthan-1.2 {one group} -setup {
        ted create BLUE BRIT SHIA USAID
    } -body {
        group otherthan SHIA
    } -cleanup {
        cleanup
    } -result {BLUE BRIT USAID}

    test otherthan-1.3 {multiple groups} -setup {
        ted create BLUE BRIT SHIA USAID
    } -body {
        group otherthan {BLUE SHIA}
    } -cleanup {
        cleanup
    } -result {BRIT USAID}

    #-------------------------------------------------------------------
    # bsid

    test bsid-1.1 {group has own bsid} -setup {
        ted create BLUE
        rdb eval {
            UPDATE groups SET bsid=5 WHERE g='BLUE'
        }
    } -body {
        group bsid BLUE
    } -cleanup {
        cleanup
    } -result {5}

    test bsid-1.2 {group gets bsid from owner} -setup {
        ted create JOE BLUE
        rdb eval {
            UPDATE actors SET bsid=7 WHERE a='JOE'
        }
    } -body {
        group bsid BLUE
    } -cleanup {
        cleanup
    } -result {7}

    test bsid-1.3 {group gets default bsid} -setup {
        ted create JOE BLUE
        rdb eval {
            UPDATE actors SET bsid=NULL WHERE a='JOE'
        }
    } -body {
        group bsid BLUE
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::

