# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-frcgroup.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    frcgroup(sim) tests.
#
#    This test suite tests the frcgroup(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate create

    test create-1.1 {frcgroup is created} -setup {
        ted create JOE
    } -body {
        frcgroup mutate create [ted entity BLUE]
        ted querylist {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g               BLUE
longname        US Army
color           #f00001
demeanor        AVERAGE
cost            0.0
gtype           FRC
a               JOE
bsid            
forcetype       REGULAR
training        PROFICIENT
base_personnel  5000
local           0
    }

    test create-1.2 {a can be empty, yields NULL} -setup {
        ted create JOE
    } -body {
        frcgroup mutate create [dict merge [ted entity BLUE] {a ""}]
        ted querylist {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g               BLUE
longname        US Army
color           #f00001
demeanor        AVERAGE
cost            0.0
gtype           FRC
a               
bsid            
forcetype       REGULAR
training        PROFICIENT
base_personnel  5000
local           0
    }


    test create-2.1 {undo deletes the frcgroup} -setup {
        ted create JOE
        frcgroup mutate create [ted entity BLUE]
        set undo [frcgroup mutate create [ted entity BRIT]]
    } -body {
        {*}$undo
        rdb eval {SELECT g FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {BLUE}


    test create-3.1 {coop curves are created} -setup {
        ted create JOE SHIA
    } -body {
        frcgroup mutate create [ted entity BLUE]
        rdb eval {SELECT f,g FROM coop_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {SHIA BLUE}

    test create-3.2 {undo deletes the coop curves} -setup {
        ted create JOE SHIA
    } -body {
        set undo [frcgroup mutate create [ted entity BLUE]]

        namespace eval :: $undo
        rdb eval {SELECT f,g FROM coop_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # mutate delete

    test delete-1.1 {Group is deleted} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup mutate delete BLUE

        # Is BLUE gone?
        rdb eval {SELECT g FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {BRIT}

    test delete-1.2 {Undo restores group} -setup {
        ted create BLUE
        set undo [frcgroup mutate delete BLUE]
    } -body {
        {*}$undo
        ted querylist {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g               BLUE
longname        US Army
color           #f00001
demeanor        AVERAGE
cost            0.0
gtype           FRC
a               JOE
bsid            
forcetype       REGULAR
training        PROFICIENT
base_personnel  5000
local           0
    }

    test delete-2.1 {coop curves are deleted} -setup {
        ted create BLUE SHIA
    } -body {
        frcgroup mutate delete BLUE

        rdb eval {SELECT f,g FROM coop_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {}

    test delete-2.2 {Undo restores coop curves} -setup {
        ted create BLUE SHIA
        set undo [frcgroup mutate delete BLUE]
    } -body {
        namespace eval :: $undo
        rdb eval {SELECT f,g FROM coop_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {SHIA BLUE}


    test delete-7.1 {deletes hrel_fg overrides} -setup {
        ted create BLUE BRIT
        ted order HREL:OVERRIDE id {BLUE BRIT}
        ted order HREL:OVERRIDE id {BRIT BLUE}
    } -body {
        frcgroup mutate delete BLUE

        rdb eval {SELECT f,g FROM hrel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {}

    test delete-7.2 {undo restores hrel_fg overrides} -setup {
        ted create BLUE BRIT
        ted order HREL:OVERRIDE id {BLUE BRIT}
        ted order HREL:OVERRIDE id {BRIT BLUE}

        set undo [frcgroup mutate delete BLUE]
    } -body {
        namespace eval :: $undo

        rdb eval {SELECT f,g FROM hrel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {BLUE BRIT BRIT BLUE}

    test delete-8.1 {deletes vrel_ga overrides} -setup {
        ted create JOE BLUE
        ted order VREL:OVERRIDE id {BLUE JOE}
    } -body {
        frcgroup mutate delete BLUE

        rdb eval {SELECT g,a FROM vrel_ga ORDER BY g,a}
    } -cleanup {
        cleanup
    } -result {}

    test delete-8.2 {undo restores vrel_ga overrides} -setup {
        ted create JOE BLUE
        ted order VREL:OVERRIDE id {BLUE JOE}

        set undo [frcgroup mutate delete BLUE]
    } -body {
        namespace eval :: $undo

        rdb eval {SELECT g,a FROM vrel_ga ORDER BY g,a}
    } -cleanup {
        cleanup
    } -result {BLUE JOE}

    #-------------------------------------------------------------------
    # mutate update


    test update-1.1 {frcgroup is updated} -setup {
        ted create BOB BLUE
    } -body {
        frcgroup mutate update {
            g            BLUE
            a            BOB
            longname     "Blue Angels"
            color        "#ff0000"
            forcetype    POLICE
            training     NONE
            demeanor     AGGRESSIVE
            cost         10.0
            local        1  
        }

        ted querylist {SELECT * FROM frcgroups_view}
    } -cleanup {
        cleanup
    } -result {
g               BLUE
longname        Blue Angels
color           #ff0000
demeanor        AGGRESSIVE
cost            10.0
gtype           FRC
a               BOB
bsid            
forcetype       POLICE
training        NONE
base_personnel  5000
local           1
    }


    test update-1.2 {identical values are OK} -setup {
        ted create BLUE
    } -body {
        set a [ted query {SELECT * FROM frcgroups_view}]

        frcgroup mutate update [ted entity BLUE]

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-1.3 {empty values are OK} -setup {
        ted create BLUE
    } -body {
        set a [ted query {SELECT * FROM frcgroups_view}]

        frcgroup mutate update  {
            g            BLUE
            longname     ""
            a            ""
            color        ""
            forcetype    ""
            training     ""
            demeanor     ""
            cost         ""
            local        ""
        }

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.1 {undo undoes the change} -setup {
        ted create BLUE
    } -body {

        set a [ted query {SELECT * FROM frcgroups_view}]

        set undo [frcgroup mutate update {
            g            BLUE
            longname     "Blue Angels"
            a            ""
            color        ""
            forcetype    ""
            training     ""
            demeanor     ""
            cost         ""
            local        ""
        }]

        {*}$undo

        set b [ted query {SELECT * FROM frcgroups_view}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # names

    test names-1.1 {Returns names: none defined} -body {
        frcgroup names
    } -cleanup {
        cleanup
    } -result {}

    test names-1.2 {Returns names} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup names
    } -cleanup {
        cleanup
    } -result {BLUE BRIT}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {Invalid name: none defined} -body {
        frcgroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid force group, none are defined}

    test validate-1.2 {Invalid name: some defined} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup validate NONESUCH
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid force group, should be one of: BLUE, BRIT}

    test validate-2.1 {Valid name} -setup {
        ted create BLUE BRIT
    } -body {
        frcgroup validate BRIT
    } -cleanup {
        cleanup
    } -result {BRIT}

    #-------------------------------------------------------------------
    # get

    test get-1.1 {get group dict} -setup {
        ted create NB1 BLUE
    } -body {
        ted pdicts [frcgroup get BLUE]
    } -cleanup {
        cleanup
    } -match dict -result {
        a              JOE
        base_personnel 5000
        bsid           {}
        color          {#f00001}
        cost           0.0
        demeanor       AVERAGE
        forcetype      REGULAR
        g              BLUE
        gtype          FRC
        local          0
        longname       {US Army}
        training       PROFICIENT
    }

    test get-1.2 {get group attribute} -setup {
        ted create NB1 BLUE
    } -body {
        frcgroup get BLUE a
    } -cleanup {
        cleanup
    } -result {JOE}


    #-------------------------------------------------------------------
    # ownedby

    test ownedby-1.1 {No groups owned by actor} -setup {
        ted create JOE BOB BLUE BRIT 
    } -body {
        frcgroup ownedby BOB
    } -cleanup {
        cleanup
    } -result {}

    test ownedby-1.2 {Some groups owned by actor} -setup {
        ted create JOE BOB ALQ TAL BLUE BRIT
    } -body {
        frcgroup ownedby JOE
    } -cleanup {
        cleanup
    } -result {BLUE BRIT}


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::

