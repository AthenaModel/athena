# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    040-absit_rules.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    absit_rules(sim) tests
#
#    This test suite tests that the absit rules fire when appropriate.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Define an htools buffer for tests
    htools ht

    # pprint text
    #
    # text  - block text
    #
    # Prints it so that it looks nice in a -result option.

    proc pprint {text} {
        return "\n[string trim $text]\n    "
    }

    # setup 
    #
    # Sets up for tests
    
    proc setup {} {
        # FIRST, other rule sets shouldn't muddy the waters.
        parm set dam.CONSUMP.active no
        parm set dam.PRESENCE.active no
        parm set dam.UNEMP.active no
        parm set dam.ENI.active no
        parm set dam.MOOD.active no
        rdb eval {DELETE FROM drivers}
        
        # NEXT, create the entities
        ted create JOE BOB NB1 NB2 BLUE TAL SHIA SUNN KURD
        
        # NEXT, lock the scenario
        ted lock
    }
    
    # absit etype resolver ?inception?
    #
    # etype     - The absit type
    # resolver  - The resolving group
    # inception - If 1 (the default) we get the inception effect.
    #             If 0, we don't.
    #
    # Creates an absit that auto-resolves after two weeks; and then
    # steps time forward three weeks, so that we see inception,
    # on-going, and resolution.
    
    proc absit {etype resolver {inception 1}} {
        ted order ABSIT:CREATE \
            n         NB1 \
            stype     $etype \
            coverage  1.0 \
            inception $inception \
            resolver  $resolver \
            rduration 2
        
        ted step
        ted step
        ted step
    }
    
    # inputs
    #
    # Output the rule inputs from the current firings.
    
    proc inputs {} {
        rdb eval {
            DROP TABLE IF EXISTS temp_inputs;
            CREATE TEMP TABLE temp_inputs AS
            SELECT DISTINCT t, rule, '' AS aut, '' AS cul, '' AS qol, '' AS sft
            FROM rule_firings
        }
        
        rdb eval {
            SELECT F.t AS t, F.rule AS rule, I.g AS g, I.c AS c
            FROM rule_firings AS F
            JOIN rule_inputs  AS I USING (firing_id)
        } {
            rdb eval "
                UPDATE temp_inputs
                SET $c = $c || \$g || ' '
                WHERE t=\$t AND rule=\$rule
            "
        }
        
        ted query {
            SELECT * FROM temp_inputs ORDER BY t, rule
        }
    }
    
    # Clean up after a test
    proc cleanup {} {
        ht clear
        ted cleanup
    }

    #-------------------------------------------------------------------
    # sigline
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.

    test sigline-1.1 {sigline text} -setup {
        # none needed
    } -body {
        driver::DISEASE sigline {ONGOING NB1}
    } -cleanup {
        cleanup
    } -result {DISEASE ongoing in NB1}

    #-------------------------------------------------------------------
    # narrative
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.


    test narrative-1.1 {narrative text: ongoing} -setup {
        # none needed
    } -body {
        driver::DISEASE narrative {
            dtype       DISEASE
            s           1
            state       ONGOING
            n           NB1
            inception   1
            coverage    0.25
            resolver    BLUE
        }
    } -cleanup {
        cleanup
    } -result {DISEASE ongoing in {nbhood:NB1} (25%)}
    
    test narrative-1.2 {narrative text: resolved, resolver} -setup {
        # none needed
    } -body {
        driver::DISEASE narrative {
            dtype       DISEASE
            s           1
            state       RESOLVED
            n           NB1
            inception   1
            coverage    0.25
            resolver    BLUE
        }
    } -cleanup {
        cleanup
    } -result {DISEASE resolved by {group:BLUE} in {nbhood:NB1}}
    
    test narrative-1.3 {narrative text: resolved, no resolver} -setup {
        # none needed
    } -body {
        driver::DISEASE narrative {
            dtype       DISEASE
            s           1
            state       RESOLVED
            n           NB1
            inception   1
            coverage    0.25
            resolver    NONE
        }
    } -cleanup {
        cleanup
    } -result {DISEASE resolved in {nbhood:NB1}}

    #-------------------------------------------------------------------
    # detail
    #
    # All situation types delegate to the same method in the same way,
    # so we'll test just one.

    test detail-1.1 {detail text, inception} -setup {
        setup 
    } -body {
        absit DISEASE TAL
        
        set fdict [rdb onecolumn {
            SELECT fdict FROM rule_firings WHERE firing_id = 1
        }]

        driver::DISEASE detail $fdict [namespace current]::ht
        pprint [ht get]
    } -cleanup {
        cleanup
    } -result {
An abstract situation of type DISEASE
has begun
in neighborhood
<a href="my://app/nbhood/NB1">NB1</a> with 100% coverage.<p>
    }
    
    test detail-1.2 {detail text, ongoing} -setup {
        setup 
    } -body {
        absit DISEASE TAL

        set fdict [rdb onecolumn {
            SELECT fdict FROM rule_firings WHERE firing_id = 2
        }]

        driver::DISEASE detail $fdict [namespace current]::ht
        pprint [ht get]
    } -cleanup {
        cleanup
    } -result {
An abstract situation of type DISEASE
is ongoing
in neighborhood
<a href="my://app/nbhood/NB1">NB1</a> with 100% coverage.<p>
    }
    
    test detail-1.3 {detail text, resolved by local} -setup {
        setup 
    } -body {
        absit DISEASE TAL

        set fdict [rdb onecolumn {
            SELECT fdict FROM rule_firings WHERE firing_id = 3
        }]

        driver::DISEASE detail $fdict [namespace current]::ht
        pprint [ht get]
    } -cleanup {
        cleanup
    } -result {
An abstract situation of type DISEASE
has been resolved
by group <a href="my://app/group/TAL">TAL</a>
in neighborhood <a href="my://app/nbhood/NB1">NB1</a>.<p>
    }


    #-------------------------------------------------------------------
    # BADFOOD
    
    test BADFOOD-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit BADFOOD TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    BADFOOD
rule       BADFOOD-1-1
fdict      dtype BADFOOD s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    BADFOOD
rule       BADFOOD-1-2
fdict      dtype BADFOOD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    BADFOOD
rule       BADFOOD-2-1
fdict      dtype BADFOOD s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test BADFOOD-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit BADFOOD BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    BADFOOD
rule       BADFOOD-1-2
fdict      dtype BADFOOD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    BADFOOD
rule       BADFOOD-1-2
fdict      dtype BADFOOD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test BADFOOD-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit BADFOOD TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 BADFOOD-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 BADFOOD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 BADFOOD-2-1 SHIA SUNN                            
    }

    test BADFOOD-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit BADFOOD BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 BADFOOD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 BADFOOD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # BADWATER
    
    test BADWATER-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit BADWATER TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    BADWATER
rule       BADWATER-1-1
fdict      dtype BADWATER s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    BADWATER
rule       BADWATER-1-2
fdict      dtype BADWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    BADWATER
rule       BADWATER-2-1
fdict      dtype BADWATER s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test BADWATER-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit BADWATER BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    BADWATER
rule       BADWATER-1-2
fdict      dtype BADWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    BADWATER
rule       BADWATER-1-2
fdict      dtype BADWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test BADWATER-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit BADWATER TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 BADWATER-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 BADWATER-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 BADWATER-2-1 SHIA SUNN                            
    }

    test BADWATER-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit BADWATER BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 BADWATER-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 BADWATER-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # COMMOUT
    
    test COMMOUT-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit COMMOUT TAL
        # No resolution effect in this rule set.
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    COMMOUT
rule       COMMOUT-1-1
fdict      dtype COMMOUT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    COMMOUT
rule       COMMOUT-1-2
fdict      dtype COMMOUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test COMMOUT-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit COMMOUT BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    COMMOUT
rule       COMMOUT-1-2
fdict      dtype COMMOUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    COMMOUT
rule       COMMOUT-1-2
fdict      dtype COMMOUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test COMMOUT-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit COMMOUT TAL        
        # No resolution effect in this rule set.
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut cul        qol        sft        
- ----------- --- ---------- ---------- ---------- 
1 COMMOUT-1-1     SHIA SUNN  SHIA SUNN  SHIA SUNN  
2 COMMOUT-1-2     SHIA SUNN  SHIA SUNN  SHIA SUNN  
    }

    test COMMOUT-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit COMMOUT BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut cul        qol        sft        
- ----------- --- ---------- ---------- ---------- 
1 COMMOUT-1-2     SHIA SUNN  SHIA SUNN  SHIA SUNN  
2 COMMOUT-1-2     SHIA SUNN  SHIA SUNN  SHIA SUNN  
    }


    #-------------------------------------------------------------------
    # CULSITE
    
    test CULSITE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit CULSITE TAL
        # No resolution effect in this rule set.
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    CULSITE
rule       CULSITE-1-1
fdict      dtype CULSITE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    CULSITE
rule       CULSITE-1-2
fdict      dtype CULSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test CULSITE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit CULSITE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    CULSITE
rule       CULSITE-1-2
fdict      dtype CULSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    CULSITE
rule       CULSITE-1-2
fdict      dtype CULSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test CULSITE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit CULSITE TAL        
        # No resolution effect in this rule set.
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut cul        qol        sft 
- ----------- --- ---------- ---------- --- 
1 CULSITE-1-1     SHIA SUNN  SHIA SUNN      
2 CULSITE-1-2     SHIA SUNN                 
    }

    test CULSITE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit CULSITE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut cul        qol sft 
- ----------- --- ---------- --- --- 
1 CULSITE-1-2     SHIA SUNN          
2 CULSITE-1-2     SHIA SUNN          
    }

    #-------------------------------------------------------------------
    # DISASTER
    
    test DISASTER-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit DISASTER TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    DISASTER
rule       DISASTER-1-1
fdict      dtype DISASTER s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    DISASTER
rule       DISASTER-1-2
fdict      dtype DISASTER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    DISASTER
rule       DISASTER-2-1
fdict      dtype DISASTER s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test DISASTER-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit DISASTER BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    DISASTER
rule       DISASTER-1-2
fdict      dtype DISASTER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    DISASTER
rule       DISASTER-1-2
fdict      dtype DISASTER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test DISASTER-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit DISASTER TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 DISASTER-1-1                SHIA SUNN  SHIA SUNN  
2 DISASTER-1-2                SHIA SUNN  SHIA SUNN  
3 DISASTER-2-1 SHIA SUNN                            
    }

    test DISASTER-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit DISASTER BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut cul qol        sft        
- ------------ --- --- ---------- ---------- 
1 DISASTER-1-2         SHIA SUNN  SHIA SUNN  
2 DISASTER-1-2         SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # DISEASE
    
    test DISEASE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit DISEASE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    DISEASE
rule       DISEASE-1-1
fdict      dtype DISEASE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    DISEASE
rule       DISEASE-1-2
fdict      dtype DISEASE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    DISEASE
rule       DISEASE-2-1
fdict      dtype DISEASE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test DISEASE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit DISEASE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    DISEASE
rule       DISEASE-1-2
fdict      dtype DISEASE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    DISEASE
rule       DISEASE-1-2
fdict      dtype DISEASE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test DISEASE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit DISEASE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 DISEASE-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 DISEASE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 DISEASE-2-1 SHIA SUNN                            
    }

    test DISEASE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit DISEASE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 DISEASE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 DISEASE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # DROUGHT
    
    test DROUGHT-1.1 {firings, SA and non-SA} -setup {
        setup 
        rdb eval {
            UPDATE civgroups
            SET sa_flag = 1
            WHERE g = 'SUNN'
        }
    } -body {
        absit DROUGHT TAL

        # There's no inception effect.  Should get rule 1.1 for 
        # non-sa groups and rule 1.2 for sa groups in each time step.
        # There's no resolution effect.
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    DROUGHT
rule       DROUGHT-1-1
fdict      dtype DROUGHT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          1
driver_id  1000
ruleset    DROUGHT
rule       DROUGHT-1-2
fdict      dtype DROUGHT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  3
t          2
driver_id  1000
ruleset    DROUGHT
rule       DROUGHT-1-1
fdict      dtype DROUGHT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  4
t          2
driver_id  1000
ruleset    DROUGHT
rule       DROUGHT-1-2
fdict      dtype DROUGHT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test DROUGHT-1.2 {inputs: inception} -setup {
        setup
        rdb eval {
            UPDATE civgroups
            SET sa_flag = 1
            WHERE g = 'SUNN'
        }
    } -body {
        absit DROUGHT TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut   cul qol   sft   
- ----------- ----- --- ----- ----- 
1 DROUGHT-1-1 SHIA      SHIA        
1 DROUGHT-1-2 SUNN      SUNN  SUNN  
2 DROUGHT-1-1 SHIA      SHIA        
2 DROUGHT-1-2 SUNN      SUNN  SUNN  
    }

    test DROUGHT-1.3 {inputs: no inception} -setup {
        setup
        rdb eval {
            UPDATE civgroups
            SET sa_flag = 1
            WHERE g = 'SUNN'
        }
    } -body {
        absit DROUGHT BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut   cul qol   sft   
- ----------- ----- --- ----- ----- 
1 DROUGHT-1-1 SHIA      SHIA        
1 DROUGHT-1-2 SUNN      SUNN  SUNN  
2 DROUGHT-1-1 SHIA      SHIA        
2 DROUGHT-1-2 SUNN      SUNN  SUNN  
    }


    #-------------------------------------------------------------------
    # EPIDEMIC
    
    test EPIDEMIC-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit EPIDEMIC TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    EPIDEMIC
rule       EPIDEMIC-1-1
fdict      dtype EPIDEMIC s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    EPIDEMIC
rule       EPIDEMIC-1-2
fdict      dtype EPIDEMIC s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    EPIDEMIC
rule       EPIDEMIC-2-1
fdict      dtype EPIDEMIC s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test EPIDEMIC-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit EPIDEMIC BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    EPIDEMIC
rule       EPIDEMIC-1-2
fdict      dtype EPIDEMIC s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    EPIDEMIC
rule       EPIDEMIC-1-2
fdict      dtype EPIDEMIC s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test EPIDEMIC-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit EPIDEMIC TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 EPIDEMIC-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 EPIDEMIC-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 EPIDEMIC-2-1 SHIA SUNN                            
    }

    test EPIDEMIC-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit EPIDEMIC BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 EPIDEMIC-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 EPIDEMIC-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # FOODSHRT
    
    test FOODSHRT-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit FOODSHRT TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    FOODSHRT
rule       FOODSHRT-1-1
fdict      dtype FOODSHRT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    FOODSHRT
rule       FOODSHRT-1-2
fdict      dtype FOODSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    FOODSHRT
rule       FOODSHRT-2-1
fdict      dtype FOODSHRT s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test FOODSHRT-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit FOODSHRT BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    FOODSHRT
rule       FOODSHRT-1-2
fdict      dtype FOODSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    FOODSHRT
rule       FOODSHRT-1-2
fdict      dtype FOODSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test FOODSHRT-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit FOODSHRT TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft 
- ------------ ---------- --- ---------- --- 
1 FOODSHRT-1-1 SHIA SUNN      SHIA SUNN      
2 FOODSHRT-1-2 SHIA SUNN      SHIA SUNN      
3 FOODSHRT-2-1 SHIA SUNN                     
    }

    test FOODSHRT-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit FOODSHRT BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft 
- ------------ ---------- --- ---------- --- 
1 FOODSHRT-1-2 SHIA SUNN      SHIA SUNN      
2 FOODSHRT-1-2 SHIA SUNN      SHIA SUNN      
    }

    #-------------------------------------------------------------------
    # FUELSHRT
    
    test FUELSHRT-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit FUELSHRT TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    FUELSHRT
rule       FUELSHRT-1-1
fdict      dtype FUELSHRT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    FUELSHRT
rule       FUELSHRT-1-2
fdict      dtype FUELSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    FUELSHRT
rule       FUELSHRT-2-1
fdict      dtype FUELSHRT s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test FUELSHRT-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit FUELSHRT BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    FUELSHRT
rule       FUELSHRT-1-2
fdict      dtype FUELSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    FUELSHRT
rule       FUELSHRT-1-2
fdict      dtype FUELSHRT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test FUELSHRT-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit FUELSHRT TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft 
- ------------ ---------- --- ---------- --- 
1 FUELSHRT-1-1 SHIA SUNN      SHIA SUNN      
2 FUELSHRT-1-2 SHIA SUNN      SHIA SUNN      
3 FUELSHRT-2-1 SHIA SUNN                     
    }

    test FUELSHRT-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit FUELSHRT BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft 
- ------------ ---------- --- ---------- --- 
1 FUELSHRT-1-2 SHIA SUNN      SHIA SUNN      
2 FUELSHRT-1-2 SHIA SUNN      SHIA SUNN      
    }

    #-------------------------------------------------------------------
    # GARBAGE
    
    test GARBAGE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit GARBAGE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    GARBAGE
rule       GARBAGE-1-1
fdict      dtype GARBAGE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    GARBAGE
rule       GARBAGE-1-2
fdict      dtype GARBAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    GARBAGE
rule       GARBAGE-2-1
fdict      dtype GARBAGE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test GARBAGE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit GARBAGE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    GARBAGE
rule       GARBAGE-1-2
fdict      dtype GARBAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    GARBAGE
rule       GARBAGE-1-2
fdict      dtype GARBAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test GARBAGE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit GARBAGE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 GARBAGE-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 GARBAGE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 GARBAGE-2-1 SHIA SUNN                            
    }

    test GARBAGE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit GARBAGE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft        
- ----------- ---------- --- ---------- ---------- 
1 GARBAGE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 GARBAGE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }


    #-------------------------------------------------------------------
    # INDSPILL
    
    test INDSPILL-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit INDSPILL TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    INDSPILL
rule       INDSPILL-1-1
fdict      dtype INDSPILL s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    INDSPILL
rule       INDSPILL-1-2
fdict      dtype INDSPILL s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    INDSPILL
rule       INDSPILL-2-1
fdict      dtype INDSPILL s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test INDSPILL-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit INDSPILL BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    INDSPILL
rule       INDSPILL-1-2
fdict      dtype INDSPILL s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    INDSPILL
rule       INDSPILL-1-2
fdict      dtype INDSPILL s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test INDSPILL-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit INDSPILL TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 INDSPILL-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 INDSPILL-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 INDSPILL-2-1 SHIA SUNN                            
    }

    test INDSPILL-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit INDSPILL BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 INDSPILL-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 INDSPILL-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # MINEFIELD
    
    test MINEFIELD-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit MINEFIELD TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    MINEFIELD
rule       MINEFIELD-1-1
fdict      dtype MINEFIELD s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    MINEFIELD
rule       MINEFIELD-1-2
fdict      dtype MINEFIELD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    MINEFIELD
rule       MINEFIELD-2-1
fdict      dtype MINEFIELD s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test MINEFIELD-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit MINEFIELD BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    MINEFIELD
rule       MINEFIELD-1-2
fdict      dtype MINEFIELD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    MINEFIELD
rule       MINEFIELD-1-2
fdict      dtype MINEFIELD s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test MINEFIELD-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit MINEFIELD TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule          aut        cul qol        sft        
- ------------- ---------- --- ---------- ---------- 
1 MINEFIELD-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 MINEFIELD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 MINEFIELD-2-1 SHIA SUNN                            
    }

    test MINEFIELD-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit MINEFIELD BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule          aut        cul qol        sft        
- ------------- ---------- --- ---------- ---------- 
1 MINEFIELD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 MINEFIELD-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # NOWATER
    
    test NOWATER-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit NOWATER TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    NOWATER
rule       NOWATER-1-1
fdict      dtype NOWATER s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    NOWATER
rule       NOWATER-1-2
fdict      dtype NOWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    NOWATER
rule       NOWATER-2-1
fdict      dtype NOWATER s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test NOWATER-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit NOWATER BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    NOWATER
rule       NOWATER-1-2
fdict      dtype NOWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    NOWATER
rule       NOWATER-1-2
fdict      dtype NOWATER s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test NOWATER-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit NOWATER TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft 
- ----------- ---------- --- ---------- --- 
1 NOWATER-1-1 SHIA SUNN      SHIA SUNN      
2 NOWATER-1-2 SHIA SUNN      SHIA SUNN      
3 NOWATER-2-1 SHIA SUNN                     
    }

    test NOWATER-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit NOWATER BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft 
- ----------- ---------- --- ---------- --- 
1 NOWATER-1-2 SHIA SUNN      SHIA SUNN      
2 NOWATER-1-2 SHIA SUNN      SHIA SUNN      
    }


    #-------------------------------------------------------------------
    # ORDNANCE
    
    test ORDNANCE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit ORDNANCE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    ORDNANCE
rule       ORDNANCE-1-1
fdict      dtype ORDNANCE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    ORDNANCE
rule       ORDNANCE-1-2
fdict      dtype ORDNANCE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    ORDNANCE
rule       ORDNANCE-2-1
fdict      dtype ORDNANCE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test ORDNANCE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit ORDNANCE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    ORDNANCE
rule       ORDNANCE-1-2
fdict      dtype ORDNANCE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    ORDNANCE
rule       ORDNANCE-1-2
fdict      dtype ORDNANCE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test ORDNANCE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit ORDNANCE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 ORDNANCE-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 ORDNANCE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 ORDNANCE-2-1 SHIA SUNN                            
    }

    test ORDNANCE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit ORDNANCE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 ORDNANCE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 ORDNANCE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # PIPELINE
    
    test PIPELINE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit PIPELINE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    PIPELINE
rule       PIPELINE-1-1
fdict      dtype PIPELINE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    PIPELINE
rule       PIPELINE-1-2
fdict      dtype PIPELINE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    PIPELINE
rule       PIPELINE-2-1
fdict      dtype PIPELINE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test PIPELINE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit PIPELINE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    PIPELINE
rule       PIPELINE-1-2
fdict      dtype PIPELINE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    PIPELINE
rule       PIPELINE-1-2
fdict      dtype PIPELINE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test PIPELINE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit PIPELINE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 PIPELINE-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 PIPELINE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 PIPELINE-2-1 SHIA SUNN                            
    }

    test PIPELINE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit PIPELINE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 PIPELINE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 PIPELINE-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # POWEROUT
    
    test POWEROUT-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit POWEROUT TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    POWEROUT
rule       POWEROUT-1-1
fdict      dtype POWEROUT s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    POWEROUT
rule       POWEROUT-1-2
fdict      dtype POWEROUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    POWEROUT
rule       POWEROUT-2-1
fdict      dtype POWEROUT s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test POWEROUT-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit POWEROUT BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    POWEROUT
rule       POWEROUT-1-2
fdict      dtype POWEROUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    POWEROUT
rule       POWEROUT-1-2
fdict      dtype POWEROUT s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test POWEROUT-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit POWEROUT TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 POWEROUT-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 POWEROUT-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 POWEROUT-2-1 SHIA SUNN                            
    }

    test POWEROUT-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit POWEROUT BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 POWEROUT-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 POWEROUT-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # REFINERY
    
    test REFINERY-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit REFINERY TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    REFINERY
rule       REFINERY-1-1
fdict      dtype REFINERY s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    REFINERY
rule       REFINERY-1-2
fdict      dtype REFINERY s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    REFINERY
rule       REFINERY-2-1
fdict      dtype REFINERY s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test REFINERY-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit REFINERY BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    REFINERY
rule       REFINERY-1-2
fdict      dtype REFINERY s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    REFINERY
rule       REFINERY-1-2
fdict      dtype REFINERY s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test REFINERY-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit REFINERY TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 REFINERY-1-1 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 REFINERY-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
3 REFINERY-2-1 SHIA SUNN                            
    }

    test REFINERY-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit REFINERY BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule         aut        cul qol        sft        
- ------------ ---------- --- ---------- ---------- 
1 REFINERY-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
2 REFINERY-1-2 SHIA SUNN      SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # RELSITE
    
    test RELSITE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit RELSITE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    RELSITE
rule       RELSITE-1-1
fdict      dtype RELSITE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    RELSITE
rule       RELSITE-1-2
fdict      dtype RELSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    RELSITE
rule       RELSITE-2-1
fdict      dtype RELSITE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test RELSITE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit RELSITE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    RELSITE
rule       RELSITE-1-2
fdict      dtype RELSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    RELSITE
rule       RELSITE-1-2
fdict      dtype RELSITE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test RELSITE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit RELSITE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul        qol        sft        
- ----------- ---------- ---------- ---------- ---------- 
1 RELSITE-1-1 SHIA SUNN  SHIA SUNN  SHIA SUNN  SHIA SUNN  
2 RELSITE-1-2 SHIA SUNN  SHIA SUNN  SHIA SUNN  SHIA SUNN  
3 RELSITE-2-1 SHIA SUNN                                   
    }

    test RELSITE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit RELSITE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul        qol        sft        
- ----------- ---------- ---------- ---------- ---------- 
1 RELSITE-1-2 SHIA SUNN  SHIA SUNN  SHIA SUNN  SHIA SUNN  
2 RELSITE-1-2 SHIA SUNN  SHIA SUNN  SHIA SUNN  SHIA SUNN  
    }

    #-------------------------------------------------------------------
    # SEWAGE
    
    test SEWAGE-1.1 {firings: inception, local resolver} -setup {
        setup 
    } -body {
        absit SEWAGE TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    SEWAGE
rule       SEWAGE-1-1
fdict      dtype SEWAGE s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    SEWAGE
rule       SEWAGE-1-2
fdict      dtype SEWAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL

firing_id  3
t          3
driver_id  1001
ruleset    SEWAGE
rule       SEWAGE-2-1
fdict      dtype SEWAGE s 1 state RESOLVED n NB1 inception 0 coverage 1.0 resolver TAL
    }

    test SEWAGE-1.2 {firings: no inception, non-local resolver} -setup {
        setup 
    } -body {
        absit SEWAGE BLUE 0
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    SEWAGE
rule       SEWAGE-1-2
fdict      dtype SEWAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE

firing_id  2
t          2
driver_id  1000
ruleset    SEWAGE
rule       SEWAGE-1-2
fdict      dtype SEWAGE s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver BLUE
    }

    test SEWAGE-1.3 {inputs: inception, local resolver} -setup {
        setup
    } -body {
        absit SEWAGE TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule       aut        cul qol        sft 
- ---------- ---------- --- ---------- --- 
1 SEWAGE-1-1 SHIA SUNN      SHIA SUNN      
2 SEWAGE-1-2 SHIA SUNN      SHIA SUNN      
3 SEWAGE-2-1 SHIA SUNN                     
    }

    test SEWAGE-1.4 {inputs: no inception, non-local resolver} -setup {
        setup
    } -body {
        absit SEWAGE BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule       aut        cul qol        sft 
- ---------- ---------- --- ---------- --- 
1 SEWAGE-1-2 SHIA SUNN      SHIA SUNN      
2 SEWAGE-1-2 SHIA SUNN      SHIA SUNN      
    }


    #-------------------------------------------------------------------
    # TRAFFIC
    
    test TRAFFIC-1.1 {firings} -setup {
        setup 
    } -body {
        absit TRAFFIC TAL
        ted querylist {SELECT * FROM rule_firings}
    } -cleanup {
        cleanup
    } -result {
firing_id  1
t          1
driver_id  1000
ruleset    TRAFFIC
rule       TRAFFIC-1-1
fdict      dtype TRAFFIC s 1 state ONGOING n NB1 inception 1 coverage 1.0 resolver TAL

firing_id  2
t          2
driver_id  1000
ruleset    TRAFFIC
rule       TRAFFIC-1-2
fdict      dtype TRAFFIC s 1 state ONGOING n NB1 inception 0 coverage 1.0 resolver TAL
    }


    test TRAFFIC-1.2 {inputs: inception} -setup {
        setup
    } -body {
        absit TRAFFIC TAL        
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft 
- ----------- ---------- --- ---------- --- 
1 TRAFFIC-1-1 SHIA SUNN      SHIA SUNN      
2 TRAFFIC-1-2 SHIA SUNN      SHIA SUNN      
    }

    test TRAFFIC-1.3 {inputs: no inception} -setup {
        setup
    } -body {
        absit TRAFFIC BLUE 0
        inputs
    } -cleanup {
        cleanup
    } -result {
t rule        aut        cul qol        sft 
- ----------- ---------- --- ---------- --- 
1 TRAFFIC-1-2 SHIA SUNN      SHIA SUNN      
2 TRAFFIC-1-2 SHIA SUNN      SHIA SUNN      
    }


    
    


    cleanupTests
}

namespace delete ::athena_test::tests::



