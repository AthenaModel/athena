# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-hrel.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    hrel(sim) tests.
#
#    This test suite tests the hrel(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), app_athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Standard override

    set H1 {
        id        {SHIA BLUE}
        base      0.5
        hist_flag 0
        current   0.0
    }

    # Clean up after a test

    proc cleanup {} {
        # Clean up the test environment
        array unset parms
        ted cleanup
    }

    #-------------------------------------------------------------------
    # mutate create

    test create-1.1 {override is created} -setup {
        ted create SHIA BLUE
    } -body {
        hrel mutate create $H1
        ted query {SELECT * FROM hrel_fg}
    } -cleanup {
        cleanup
    } -result {
f    g    base hist_flag current 
---- ---- ---- --------- ------- 
SHIA BLUE 0.5  0         0.0     
    }

    test create-2.1 {undo deletes the override} -setup {
        ted create SHIA BLUE
        set undo [hrel mutate create $H1]
    } -body {
        namespace eval :: $undo
        rdb eval {SELECT * FROM hrel_fg}
    } -cleanup {
        cleanup
    } -result {}

    #-------------------------------------------------------------------
    # mutate delete

    test delete-1.1 {Record is deleted} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1
    } -body {
        hrel mutate delete {SHIA BLUE}

        # Is SHIA gone?
        rdb eval {SELECT f,g FROM hrel_fg}
    } -cleanup {
        cleanup
    } -result {}

    test delete-2.1 {Undo restores record} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1 
        set undo [hrel mutate delete {SHIA BLUE}]
    } -body {
        namespace eval :: $undo
        ted query {SELECT * FROM hrel_fg}
    } -cleanup {
        cleanup
    } -result {
f    g    base hist_flag current 
---- ---- ---- --------- ------- 
SHIA BLUE 0.5  0         0.0     
    }


    #-------------------------------------------------------------------
    # mutate update


    test update-1.1 {rel is updated} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1 
    } -body {
        hrel mutate update {
            id        {SHIA BLUE}
            base      0.7
            hist_flag 1
            current   0.6
        }

        ted query {SELECT * FROM hrel_fg ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    g    base hist_flag current 
---- ---- ---- --------- ------- 
SHIA BLUE 0.7  1         0.6     
    }


    test update-1.2 {empty values are OK} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1
    } -body {
        set a [ted query {SELECT * FROM hrel_fg ORDER BY f,g}]

        hrel mutate update  {
            id        {SHIA BLUE}
            base      ""
            hist_flag ""
            current   ""
        }

        set b [ted query {SELECT * FROM hrel_fg ORDER BY f,g}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    test update-2.1 {undo undoes the change} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1
    } -body {

        set a [ted query {SELECT * FROM hrel_fg ORDER BY f,g}]

        set undo [hrel mutate update {
            id        {SHIA BLUE}
            base      0.5
            hist_flag 1
            current   0.7
        }]

        eval $undo

        set b [ted query {SELECT * FROM hrel_fg ORDER BY f,g}]

        expr {$a eq $b}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # exists

    test exists-1.1 {groups do exist} -body {
        hrel exists {NONESUCH NONESUCH}
    } -cleanup {
        cleanup
    } -result {0}


    test exists-1.2 {record does not exist} -body {
        ted create SHIA BLUE
        hrel exists {SHIA BLUE}
    } -cleanup {
        cleanup
    } -result {0}

    test exists-1.3 {record exists} -setup {
        ted create SHIA BLUE
        hrel mutate create $H1
    } -body {
        hrel exists {SHIA BLUE}
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # validate

    test validate-1.1 {invalid group f} -body {
        hrel validate {NONESUCH NONESUCH}
    } -returnCodes {
        error
    } -result {Invalid group, none are defined}


    test validate-1.2 {Invalid group g} -setup {
        ted create SHIA BLUE
    } -body {
        hrel validate {BLUE NONESUCH}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {Invalid group, should be one of: BLUE, SHIA}


    test validate-1.3 {f eq g} -setup {
        ted create SHIA BLUE
    } -body {
        hrel validate {BLUE BLUE}
    } -returnCodes {
        error
    } -cleanup {
        cleanup
    } -result {A group's relationship with itself cannot be overridden.}

    test validate-2.1 {Valid relationship} -setup {
        ted create SHIA BLUE
    } -body {
        hrel validate {SHIA BLUE}
    } -cleanup {
        cleanup
    } -result {SHIA BLUE}

    #-------------------------------------------------------------------
    # gui_hrel_base_view
    #
    # The gui_hrel_base_view is implemented in scenariodb_attitude.sql
    # and gui_attitude.sql, not in hrel.tcl,
    # so perhaps it doesn't belong here; on the other hand, it pulls
    # together affinities from bsys with relationship overrides
    # from hrel_fg, and it ought to be tested somewhere.

    test gui_hrel_base_view-1.1 {Defaults to 1.0 and 0.0} -setup {
        ted create SHIA BLUE
    } -body {
        ted query {SELECT * FROM gui_hrel_base_view ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    ftype g    gtype nat base hist_flag current override 
---- ----- ---- ----- --- ---- --------- ------- -------- 
BLUE FRC   BLUE FRC   1.0 1.0  0         1.0     0        
BLUE FRC   SHIA CIV   0.0 0.0  0         0.0     0        
SHIA CIV   BLUE FRC   0.0 0.0  0         0.0     0        
SHIA CIV   SHIA CIV   1.0 1.0  0         1.0     0        
    }

    test gui_hrel_base_view-1.2 {hrel_fg overrides bsystem values} -setup {
        ted create SHIA BLUE
    } -body {
        hrel mutate create $H1 
        ted query {SELECT * FROM gui_hrel_base_view ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    ftype g    gtype nat base hist_flag current override 
---- ----- ---- ----- --- ---- --------- ------- -------- 
BLUE FRC   BLUE FRC   1.0 1.0  0         1.0     0        
BLUE FRC   SHIA CIV   0.0 0.0  0         0.0     0        
SHIA CIV   BLUE FRC   0.0 0.5  0         0.5     1        
SHIA CIV   SHIA CIV   1.0 1.0  0         1.0     0        
    }

    test gui_hrel_base_view-1.3 {hrel_fg overrides hist_flag, current} -setup {
        ted create SHIA BLUE
    } -body {
        hrel mutate create $H1 
        hrel mutate update {id {SHIA BLUE} hist_flag 1 current 0.2}
        ted query {SELECT * FROM gui_hrel_base_view ORDER BY f,g}
    } -cleanup {
        cleanup
    } -result {
f    ftype g    gtype nat base hist_flag current override 
---- ----- ---- ----- --- ---- --------- ------- -------- 
BLUE FRC   BLUE FRC   1.0 1.0  0         1.0     0        
BLUE FRC   SHIA CIV   0.0 0.0  0         0.0     0        
SHIA CIV   BLUE FRC   0.0 0.5  1         0.2     1        
SHIA CIV   SHIA CIV   1.0 1.0  0         1.0     0        
    }

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::





