# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    020-SIM.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    athena(n) SIM:* order tests.
#
#    This test suite tests the sim(sim) orders.
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    variable clockdata [tdb clock checkpoint]

    # Set up to run

    proc setup {} {
        ted create NB1 BLUE SHIA
        ted lock
    }


    # Clean up after a test

    proc cleanup {} {
        variable clockdata

        # Clean up the test environment
        tdb clock restore $clockdata
        ted cleanup
    }

    #-------------------------------------------------------------------
    # SIM:STARTDATE

    test STARTDATE-1.1 {required parms} -body {
        ted order -reject SIM:STARTDATE {}
    } -result {
        startdate {required value}
    }


    test STARTDATE-1.2 {invalid startdate} -body {
        ted order -reject SIM:STARTDATE startdate NONESUCH
    } -result {
        startdate {Invalid week string: "NONESUCH"}
    }


    test STARTDATE-2.1 {startdate is set} -body {
        ted order SIM:STARTDATE startdate 2014W26
        tdb clock cget -week0
    } -cleanup {
        cleanup
    } -result {2014W26}


    test STARTDATE-2.2 {<Time> is sent} -body {
        ted notifier bind ::tdb <Time>
        ted order SIM:STARTDATE startdate 2014W26
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }
    
    test STARTDATE-3.1 {<Time> is sent on undo} -setup {
        set undo [ted order SIM:STARTDATE startdate 2014W26]

    } -body {
        ted notifier bind ::tdb <Time>
        tdb order undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }
    
    #-------------------------------------------------------------------
    # SIM:STARTTICK

    test STARTTICK-1.1 {required parms} -body {
        ted order -reject SIM:STARTTICK {}
    } -result {
        starttick {required value}
    }


    test STARTTICK-1.2 {invalid starttick} -body {
        ted order -reject SIM:STARTTICK starttick NONESUCH
    } -result {
        starttick {invalid value "NONESUCH", expected integer}
    }


    test STARTTICK-2.1 {starttick is set} -body {
        ted order SIM:STARTTICK starttick 52
        tdb clock cget -tick0
    } -cleanup {
        cleanup
    } -result {52}


    test STARTTICK-2.2 {<Time> is sent} -body {
        ted notifier bind ::tdb <Time>
        ted order SIM:STARTTICK starttick 52
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }
    
    test STARTTICK-3.1 {<Time> is sent on undo} -setup {
        set undo [ted order SIM:STARTTICK starttick 52]

    } -body {
        ted notifier bind ::tdb <Time>
        tdb order undo
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }
    

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::







