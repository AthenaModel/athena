# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    010-sim.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    sim(sim) tests.
#
#    This test suite tests the sim(sim) mutators and queries
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n) and athena(1)

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [file dirname [file normalize [info script]]] ted.tcl]

    # Initialize tcltest(n), athena(n), et al.
    ted init $argv
}

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::athena_test::tests:: {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Get initial time 0
    set clockdata [tdb clock checkpoint]

    variable tickList

    proc tickCmd {state i n} {
        variable tickList
        lappend tickList [list $state $i $n]

        assert {$state in {RUNNING COMPLETE}}
    }

    proc pauseCmd {state i n} {
        if {$state eq "RUNNING" && $i == 3} {
            tdb sim pause
        }
    }
    
    # Clean up after a test

    proc cleanup {} {
        variable clockdata

        # Clean up the test environment
        tdb clock restore $clockdata

        ted cleanup
    }

    #-------------------------------------------------------------------
    # init
    #
    # Verify initial module state
   

    test init-1.1 {Initial state} -body {
        list \
            [tdb clock now]       \
            [tdb clock asString]
        
    } -result {0 2012W01}

    #-------------------------------------------------------------------
    # startdate

    test startdate-1.1 {Sets the simclock's start date} -body {
        tdb sim startdate 2014W26
        tdb clock cget -week0
    } -cleanup {
        cleanup
    } -result {2014W26}

    
    test startdate-1.2 {Sends <Time>} -body {
        ted notifier bind ::tdb <Time>
        tdb sim startdate 2014W26
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }


    test startdate-1.3 {Returns undo script} -body {
        tdb sim startdate 2014W26
    } -cleanup {
        cleanup
    } -match glob -result {* startdate 2012W01}


    test startdate-1.4 {Sets "changed"} -body {
        tdb sim startdate 2014W26
        tdb sim changed
    } -cleanup {
        cleanup
    } -result {1}

    #-------------------------------------------------------------------
    # starttick

    test starttick-1.1 {Sets the simclock's start tick} -body {
        tdb sim starttick 52
        tdb clock cget -tick0
    } -cleanup {
        cleanup
    } -result {52}

    
    test starttick-1.2 {Sends <Time>} -body {
        ted notifier bind ::tdb <Time>
        tdb sim starttick 52
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <Time>}
    }


    test starttick-1.3 {Returns undo script} -body {
        tdb sim starttick 52
    } -cleanup {
        cleanup
    } -match glob -result {* starttick 0}


    test starttick-1.4 {Sets "changed"} -body {
        tdb sim starttick 52
        tdb sim changed
    } -cleanup {
        cleanup
    } -result {1}


    #-------------------------------------------------------------------
    # run/pause

    test advance-1.1 {Run for 1 week} -setup {
        ted create NB1 BLUE SHIA
    } -body {
        tdb lock
        tdb sim advance 1
        tdb sim stoptime
    } -cleanup {
        cleanup
    } -result {1}

    test advance-1.2 {Run for several ticks} -setup {
        ted create NB1 BLUE SHIA
    } -body {
        tdb lock
        tdb sim advance 5
        tdb sim stoptime
    } -cleanup {
        cleanup
    } -result {5}

    test advance-1.3 {Calls tickcmd} -setup {
        ted create NB1 BLUE SHIA
    } -body {
        tdb lock
        tdb sim advance 2 [namespace current]::tickCmd
        set tickList
    } -cleanup {
        cleanup
    } -result {{RUNNING 1 2} {RUNNING 2 2} {COMPLETE 2 2}}


    test advance-1.5 {Sends Events} -setup {
        ted create NB1 BLUE SHIA
    } -body {
        tdb lock
        ted notifier bind ::tdb <Tick>
        ted notifier bind ::tdb <State>
        tdb sim advance 2
        ted notifier received
    } -cleanup {
        cleanup
    } -result {
        {::tdb <State>}
        {::tdb <Tick>}
        {::tdb <Tick>}
        {::tdb <State>}
    }

    test advance-2.1 {Pauses if running} -setup {
        ted create NB1 BLUE SHIA
    } -body {
        tdb lock
        tdb sim advance 10 [namespace current]::pauseCmd
        list [tdb state] [tdb clock now]
    } -cleanup {
        cleanup
    } -result {PAUSED 3}


    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::athena_test::tests::






